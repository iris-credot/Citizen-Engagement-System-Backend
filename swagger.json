
    {
        "swagger": "2.0",
        "info": {
       "title": "Citizen Engagement System API",
          "description": "CareConnect-API",
          "version": "1.0.0"
        },
        "schemes": ["http", "https"],
        "securityDefinitions":{
          "Bearer":{
           "type":"apiKey",
           "name":"Authorization",
           "in":"header",
           "description":"Enter the token for Authorization"
          }
          },
        "paths":{
            "/agency/create": {
                "post": {
                  "tags": ["Agency"],
                  "summary": "Create a new agency",
                  "security":[
                    {
                  "Bearer":[]
                     }
          ],
                  "requestBody": {
                    "required": true,
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/definitions/Agency"
                        }
                      }
                    }
                  },
                  "responses": {
                    "201": {
                      "description": "Agency created successfully"
                    },
                    "400": {
                      "description": "Bad request"
                    }
                  }
                }
              },
              "/agency/getall": {
                "get": {
                  "tags": ["Agency"],
                  "summary": "Get all agencies",
                  "security":[
                    {
                  "Bearer":[]
                     }
          ],
                  "responses": {
                    "200": {
                      "description": "List of all agencies"
                    }
                  }
                }
              },
              "/agency/filter": {
                "get": {
                  "tags": ["Agency"],
                  "summary": "Filter agencies",
                  "security":[
                    {
                  "Bearer":[]
                     }
          ],
                  "parameters": [],
                  "responses": {
                    "200": {
                      "description": "Filtered list of agencies"
                    }
                  }
                }
              },
              "/agency/by-email": {
                "get": {
                  "tags": ["Agency"],
                  "summary": "Get agency by email",
                  "security":[
                    {
                  "Bearer":[]
                     }
          ],
                  "parameters": [
                    {
                      "name": "email",
                      "in": "query",
                      "schema": {
                        "type": "string"
                      },
                      "required": true
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "Agency found"
                    },
                    "404": {
                      "description": "Agency not found"
                    }
                  }
                }
              },
              "/agency/getOne/{id}": {
                "get": {
                  "tags": ["Agency"],
                  "summary": "Get agency by ID",
                  "security":[
                    {
                  "Bearer":[]
                     }
          ],
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "Agency data"
                    },
                    "404": {
                      "description": "Agency not found"
                    }
                  }
                }
              },
              "/agency/update/{id}": {
                "put": {
                  "tags": ["Agency"],
                  "summary": "Update agency by ID",
                  "security":[
                    {
                  "Bearer":[]
                     }
          ],
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "requestBody": {
                    "required": true,
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/definitions/Agency"
                        }
                      }
                    }
                  },
                  "responses": {
                    "200": {
                      "description": "Agency updated"
                    },
                    "404": {
                      "description": "Agency not found"
                    }
                  }
                }
              },
              "/agency/delete/{id}": {
                "delete": {
                  "tags": ["Agency"],
                  "summary": "Delete agency by ID",
                  "security":[
                    {
                  "Bearer":[]
                     }
          ],
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "Agency deleted"
                    },
                    "404": {
                      "description": "Agency not found"
                    }
                  }
                }
              },
              "/category/create": {
                "post": {
                  "tags": ["Category"],
                  "summary": "Create a new category",
                  "security":[
                    {
                  "Bearer":[]
                     }
          ],
                  "requestBody": {
                    "required": true,
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/definitions/Category"
                        }
                      }
                    }
                  },
                  "responses": {
                    "201": {
                      "description": "Category created successfully"
                    },
                    "400": {
                      "description": "Bad request"
                    }
                  }
                }
              },
              "/category/getall": {
                "get": {
                  "tags": ["Category"],
                  "summary": "Get all categories",
                  "security":[
                    {
                  "Bearer":[]
                     }
          ],
                  "responses": {
                    "200": {
                      "description": "List of all categories"
                    }
                  }
                }
              },
              "/category/filter": {
                "get": {
                  "tags": ["Category"],
                  "summary": "Filter categories by agency",
                  "security":[
                    {
                  "Bearer":[]
                     }
          ],
                  "parameters": [
                    {
                      "name": "agency_id",
                      "in": "query",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "Filtered list of categories"
                    }
                  }
                }
              },
              "/category/getOne/{id}": {
                "get": {
                  "tags": ["Category"],
                  "summary": "Get category by ID",
                  "security":[
                    {
                  "Bearer":[]
                     }
          ],
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "Category details"
                    },
                    "404": {
                      "description": "Category not found"
                    }
                  }
                }
              },
              "/category/update/{id}": {
                "put": {
                  "tags": ["Category"],
                  "summary": "Update category by ID",
                  "security":[
                    {
                  "Bearer":[]
                     }
          ],
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "requestBody": {
                    "required": true,
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/definitions/Category"
                        }
                      }
                    }
                  },
                  "responses": {
                    "200": {
                      "description": "Category updated successfully"
                    },
                    "404": {
                      "description": "Category not found"
                    }
                  }
                }
              },
              "/category/delete/{id}": {
                "delete": {
                  "tags": ["Category"],
                  "summary": "Delete category by ID",
                  "security":[
                    {
                  "Bearer":[]
                     }
          ],
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "Category deleted"
                    },
                    "404": {
                      "description": "Category not found"
                    }
                  }
                }
              },
              "/complaint/create": {
                "post": {
                  "tags": ["Complaint"],
                  "summary": "Create a new complaint",
                  "security": [{ "Bearer": [] }],
                  "requestBody": {
                    "required": true,
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/definitions/Complaint"
                        }
                      }
                    }
                  },
                  "responses": {
                    "201": { "description": "Complaint created successfully" },
                    "400": { "description": "Invalid input" }
                  }
                }
              },
              "/complaint/getall": {
                "get": {
                  "tags": ["Complaint"],
                  "summary": "Get all complaints (super admin only)",
                  "security": [{ "Bearer": [] }],
                  "responses": {
                    "200": { "description": "List of complaints" }
                  }
                }
              },
              "/complaint/filter": {
                "get": {
                  "tags": ["Complaint"],
                  "summary": "Filter complaints by query parameters",
                  "security": [{ "Bearer": [] }],
                  "parameters": [
                    {
                      "name": "status",
                      "in": "query",
                      "schema": { "type": "string" }
                    },
                    {
                      "name": "agency_id",
                      "in": "query",
                      "schema": { "type": "string" }
                    }
                  ],
                  "responses": {
                    "200": { "description": "Filtered complaints" }
                  }
                }
              },
              "/complaint/by-email": {
                "get": {
                  "tags": ["Complaint"],
                  "summary": "Get complaints by email (agency or user)",
                  "security": [{ "Bearer": [] }],
                  "responses": {
                    "200": { "description": "Complaints retrieved by email" }
                  }
                }
              },
              "/complaint/status/{id}": {
                "put": {
                  "tags": ["Complaint"],
                  "summary": "Change complaint status",
                  "security": [{ "Bearer": [] }],
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": { "type": "string" }
                    }
                  ],
                  "requestBody": {
                    "required": true,
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "Resolved"
                            }
                          },
                          "required": ["status"]
                        }
                      }
                    }
                  },
                  "responses": {
                    "200": { "description": "Complaint status updated" }
                  }
                }
              },
              "/complaint/getOne/{id}": {
                "get": {
                  "tags": ["Complaint"],
                  "summary": "Get a single complaint by ID",
                  "security": [{ "Bearer": [] }],
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": { "type": "string" }
                    }
                  ],
                  "responses": {
                    "200": { "description": "Complaint found" },
                    "404": { "description": "Complaint not found" }
                  }
                }
              },
              "/complaint/update/{id}": {
                "put": {
                  "tags": ["Complaint"],
                  "summary": "Update complaint details",
                  "security": [{ "Bearer": [] }],
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": { "type": "string" }
                    }
                  ],
                  "requestBody": {
                    "required": true,
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/definitions/Complaint"
                        }
                      }
                    }
                  },
                  "responses": {
                    "200": { "description": "Complaint updated" }
                  }
                }
              },
              "/complaint/delete/{id}": {
                "delete": {
                  "tags": ["Complaint"],
                  "summary": "Delete a complaint",
                  "security": [{ "Bearer": [] }],
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": { "type": "string" }
                    }
                  ],
                  "responses": {
                    "200": { "description": "Complaint deleted" },
                    "404": { "description": "Complaint not found" }
                  }
                }
              },
              "/response/create": {
                "post": {
                  "tags": ["Response"],
                  "summary": "Create a new response",
                  "security": [{ "Bearer": [] }],
                  "requestBody": {
                    "required": true,
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/definitions/Response"
                        }
                      }
                    }
                  },
                  "responses": {
                    "201": { "description": "Response created successfully" },
                    "400": { "description": "Invalid input" }
                  }
                }
              },
              "/response/all": {
                "get": {
                  "tags": ["Response"],
                  "summary": "Get all responses",
                  "security": [{ "Bearer": [] }],
                  "responses": {
                    "200": { "description": "List of all responses" }
                  }
                }
              },
              "/response/get/{id}": {
                "get": {
                  "tags": ["Response"],
                  "summary": "Get response by ID",
                  "security": [{ "Bearer": [] }],
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": { "type": "string" }
                    }
                  ],
                  "responses": {
                    "200": { "description": "Response retrieved" },
                    "404": { "description": "Response not found" }
                  }
                }
              },
              "/response/update/{id}": {
                "put": {
                  "tags": ["Response"],
                  "summary": "Update response by ID",
                  "security": [{ "Bearer": [] }],
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": { "type": "string" }
                    }
                  ],
                  "requestBody": {
                    "required": true,
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/definitions/Response"
                        }
                      }
                    }
                  },
                  "responses": {
                    "200": { "description": "Response updated" },
                    "404": { "description": "Response not found" }
                  }
                }
              },
              "/response/delete/{id}": {
                "delete": {
                  "tags": ["Response"],
                  "summary": "Delete response by ID",
                  "security": [{ "Bearer": [] }],
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": { "type": "string" }
                    }
                  ],
                  "responses": {
                    "200": { "description": "Response deleted" },
                    "404": { "description": "Response not found" }
                  }
                }
              },
              "/response/byComplaint/{id}": {
                "get": {
                  "tags": ["Response"],
                  "summary": "Get responses for a specific complaint",
                  "security": [{ "Bearer": [] }],
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": { "type": "string" }
                    }
                  ],
                  "responses": {
                    "200": { "description": "Responses for the complaint retrieved" }
                  }
                }
              },
              "/response/byResponser/{id}": {
                "get": {
                  "tags": ["Response"],
                  "summary": "Get responses by the responder's ID",
                  "security": [{ "Bearer": [] }],
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": { "type": "string" }
                    }
                  ],
                  "responses": {
                    "200": { "description": "Responses by responder retrieved" }
                  }
                }
              },
              "/notification/getall": {
                "get": {
                  "tags": ["Notification"],
                  "summary": "Get all notifications (Admin only)",
                  "security": [
                    {
                      "Bearer": []
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "List of all notifications",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "array",
                            "items": {
                              "$ref": "#/definitions/Notification"
                            }
                          }
                        }
                      }
                    },
                    "403": { "description": "Unauthorized" }
                  }
                }
              },
              "/notification/get/{id}": {
                "get": {
                  "tags": ["Notification"],
                  "summary": "Get notifications for a specific user",
                  "security": [
                    {
                      "Bearer": []
                    }
                  ],
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": {
                        "type": "string"
                      },
                      "description": "User ID"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "Notifications for the user",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "array",
                            "items": {
                              "$ref": "#/definitions/Notification"
                            }
                          }
                        }
                      }
                    },
                    "404": { "description": "User not found or no notifications" }
                  }
                }
              },
              "/user/signup": {
                "post": {
                  "tags": ["User"],
                  "summary": "Sign up a new user",
                  "requestBody": {
                    "required": true,
                    "content": {
                      "multipart/form-data": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "image": {
                              "type": "string",
                              "format": "binary"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            }
                          },
                          "required": ["name", "email", "password"]
                        }
                      }
                    }
                  },
                  "responses": {
                    "201": { "description": "User created successfully" },
                    "400": { "description": "Validation error" }
                  }
                }
              },
              "/user/signupAdmin": {
                "post": {
                  "tags": ["User"],
                  "summary": "Sign up a new admin user",
                  "security": [{ "Bearer": [] }],
                  "requestBody": {
                    "required": true,
                    "content": {
                      "multipart/form-data": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "image": { "type": "string", "format": "binary" },
                            "name": { "type": "string" },
                            "email": { "type": "string" },
                            "password": { "type": "string" }
                          },
                          "required": ["name", "email", "password"]
                        }
                      }
                    }
                  },
                  "responses": {
                    "201": { "description": "Admin user created successfully" },
                    "403": { "description": "Unauthorized" }
                  }
                }
              },
              "/user/login": {
                "post": {
                  "tags": ["User"],
                  "summary": "User login",
                  "requestBody": {
                    "required": true,
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "email": { "type": "string" },
                            "password": { "type": "string" }
                          },
                          "required": ["email", "password"]
                        }
                      }
                    }
                  },
                  "responses": {
                    "200": { "description": "Login successful" },
                    "401": { "description": "Invalid credentials" }
                  }
                }
              },
              "/user/forgot": {
                "post": {
                  "tags": ["User"],
                  "summary": "Request password reset",
                  "requestBody": {
                    "required": true,
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "email": { "type": "string" }
                          },
                          "required": ["email"]
                        }
                      }
                    }
                  },
                  "responses": {
                    "200": { "description": "OTP sent to email" }
                  }
                }
              },
              "/user/verifyotp": {
                "post": {
                  "tags": ["User"],
                  "summary": "Verify OTP",
                  "requestBody": {
                    "required": true,
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "email": { "type": "string" },
                            "otp": { "type": "string" }
                          },
                          "required": ["email", "otp"]
                        }
                      }
                    }
                  },
                  "responses": {
                    "200": { "description": "OTP verified" }
                  }
                }
              },
              "/user/logout": {
                "post": {
                  "tags": ["User"],
                  "summary": "Logout user",
                  "responses": {
                    "200": { "description": "User logged out" }
                  }
                }
              },
              "/user/all": {
                "get": {
                  "tags": ["User"],
                  "summary": "Get all users",
                  "security": [{ "Bearer": [] }],
                  "responses": {
                    "200": {
                      "description": "List of users",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "array",
                            "items": {
                              "$ref": "#/definitions/User"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "/user/delete/{id}": {
                "delete": {
                  "tags": ["User"],
                  "summary": "Delete a user",
                  "security": [{ "Bearer": [] }],
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": { "type": "string" }
                    }
                  ],
                  "responses": {
                    "200": { "description": "User deleted" }
                  }
                }
              },
              "/user/profile/{id}": {
                "put": {
                  "tags": ["User"],
                  "summary": "Update user profile",
                  "security": [{ "Bearer": [] }],
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "schema": { "type": "string" }
                    }
                  ],
                  "requestBody": {
                    "required": true,
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/definitions/User"
                        }
                      }
                    }
                  },
                  "responses": {
                    "200": { "description": "User profile updated" }
                  }
                }
              },
              "/user/password": {
                "put": {
                  "tags": ["User"],
                  "summary": "Update password",
                  "security": [{ "Bearer": [] }],
                  "requestBody": {
                    "required": true,
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "oldPassword": { "type": "string" },
                            "newPassword": { "type": "string" }
                          },
                          "required": ["oldPassword", "newPassword"]
                        }
                      }
                    }
                  },
                  "responses": {
                    "200": { "description": "Password updated" }
                  }
                }
              },
              "/user/resetpassword/{token}": {
                "post": {
                  "tags": ["User"],
                  "summary": "Reset password using token",
                  "parameters": [
                    {
                      "name": "token",
                      "in": "path",
                      "required": true,
                      "schema": { "type": "string" }
                    }
                  ],
                  "requestBody": {
                    "required": true,
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "newPassword": { "type": "string" }
                          },
                          "required": ["newPassword"]
                        }
                      }
                    }
                  },
                  "responses": {
                    "200": { "description": "Password reset successful" }
                  }
                }
              }
          
        },    
        "definitions": {
        
            "Agency": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "MongoDB ObjectId of the agency",
                  "example": "60d21b4667d0d8992e610c85"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the agency",
                  "example": "City Health Department"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the agency",
                  "example": "Manages public health programs"
                },
                "location": {
                  "type": "string",
                  "description": "Physical location of the agency",
                  "example": "123 Main St, Springfield"
                },
                "contact_email": {
                  "type": "string",
                  "format": "email",
                  "description": "Contact email address of the agency",
                  "example": "contact@agency.org"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of creation"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of last update"
                }
              },
              "required": ["name", "contact_email"]
            },
            "Category": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "MongoDB ObjectId of the category"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the category",
                  "example": "Sanitation"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the category",
                  "example": "Complaints related to sanitation services"
                },
                "agency_id": {
                  "type": "string",
                  "description": "Reference to Agency ID",
                  "example": "60d21b4667d0d8992e610c85"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": ["name", "agency_id"]
            },
            "Complaint": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "MongoDB ObjectId of the complaint"
                },
                "user_id": {
                  "type": "string",
                  "description": "Reference to User ID who filed complaint"
                },
                "category_id": {
                  "type": "string",
                  "description": "Reference to Category ID"
                },
                "agency_id": {
                  "type": "string",
                  "description": "Reference to Agency ID"
                },
                "title": {
                  "type": "string",
                  "description": "Title of the complaint",
                  "example": "Garbage not collected"
                },
                "description": {
                  "type": "string",
                  "description": "Detailed description of the complaint"
                },
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of attachment URLs or filenames",
                  "example": ["img1.jpg", "report.pdf"]
                },
                "status": {
                  "type": "string",
                  "enum": ["new", "in_progress", "resolved", "closed"],
                  "default": "new",
                  "description": "Current status of the complaint"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": ["user_id", "category_id", "agency_id", "title", "description"]
            },
            "Notification": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "MongoDB ObjectId of the notification"
                },
                "user_id": {
                  "type": "string",
                  "description": "Reference to User ID who receives notification"
                },
                "message": {
                  "type": "string",
                  "description": "Notification message content"
                },
                "status": {
                  "type": "string",
                  "enum": ["pending", "sent", "failed"],
                  "default": "pending"
                },
                "type": {
                  "type": "string",
                  "enum": ["Notification", "complaint", "response", "category"],
                  "default": "Notification",
                  "description": "Type/category of notification"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": ["user_id", "message", "type"]
            },
          
            "User": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "MongoDB ObjectId of the user"
                },
                "username": {
                  "type": "string",
                  "description": "Username of the user",
                  "example": "johndoe123"
                },
                "names": {
                  "type": "string",
                  "description": "Full name of the user",
                  "example": "John Doe"
                },
                "bio": {
                  "type": "string",
                  "description": "User biography or profile description"
                },
                "image": {
                  "type": "string",
                  "description": "URL or path to user's profile image"
                },
                "address": {
                  "type": "string",
                  "description": "User's address"
                },
                "phoneNumber": {
                  "type": "string",
                  "description": "User's phone number"
                },
                "dateOfBirth": {
                  "type": "string",
                  "format": "date",
                  "description": "Date of birth"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "User's email address"
                },
                "gender": {
                  "type": "string",
                  "enum": ["Male", "Female"]
                },
                "role": {
                  "type": "string",
                  "enum": ["citizen", "admin", "super-admin"],
                  "default": "citizen"
                },
                "agency_id": {
                  "type": "string",
                  "description": "Reference to Agency ID (required if admin)"
                },
                "otpExpires": {
                  "type": "string",
                  "description": "OTP expiration timestamp"
                },
                "otp": {
                  "type": "string",
                  "description": "One Time Password for verification"
                },
                "verified": {
                  "type": "boolean",
                  "default": false,
                  "description": "Verification status"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": ["email", "password"]
            },
             "Response":{
    "type": "object",
    "properties": {
    "responseDate":{
      "type": "Date"
      },
      
        "loanStatus":{
        "type":"string",
        "enum": ["Approved","Denied","Update request","Pending"]
        
      },
      
      "approvedAmount":{
        "type": "Number"
      },
      
      "interestRate":{
        "type": "string"
      
      },
      
        "repaymentPeriod":{
        "type": "Number"
      },
      
      "monthlyRepaymentAmount":{
        "type": "Number"
      },
      
      "totalRepaymentAmount":{
        "type": "Number"
      },
       "message":{
        "type": "string"
      }
    }
  }
          }
        }
      
      
  
  